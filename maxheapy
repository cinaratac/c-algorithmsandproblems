#include <iostream>
#include <vector>
using namespace std;

void MaxHeapfy(vector <int> &arr, int n, int i){
    int longest=i;
    int right=i*2+2;
    int left=i*2+1;
    if(n>right&&arr[longest]<arr[right]){
        longest=right;
    }
    if(n>left&&arr[longest]<arr[left]){
        longest=left;
    }
    if(arr[longest]!=arr[i]){
        swap(arr[longest], arr[i]);
        MaxHeapfy(arr, n, longest);
    }
    
}
void heapfy(vector <int> &arr){
    int n=arr.size();
    for(int i=n/2-1;i>=0;i--){
        MaxHeapfy(arr, n, i);
    }
    
}
void heapsort(vector <int> &arr){
    int n=arr.size();
    heapfy(arr);
    for(int i=n-1;i>=0;i--){
        swap(arr[0], arr[i]);
        MaxHeapfy(arr, i, 0);
    }
}

void print(vector<int> &arr){
    for(int i=0;i<arr.size();i++){
    cout<<arr[i]<<" ";
}
    cout<<endl;
    }
    int main(){
    vector<int> arr={24,1,54,8,15,8,2,42,41};
    cout<<"Before heapfy and heapsort: ";
    print(arr);
        heapsort(arr);
    cout<<"After heapfy and heapsort: ";
    print(arr);
}
